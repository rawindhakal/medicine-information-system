/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package medicine.information.system;

import java.awt.Desktop;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author rawin, ritesh, bibek
 */
public class MedicineInformation extends javax.swing.JFrame {

    private int importCount = 0;
    private int SNo;
    private boolean sorted = false;
    private boolean emptyRowCheck;


    /**
     * Creates new form MedicineInformation
     */
    public MedicineInformation() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtMedicineID = new javax.swing.JTextField();
        txtManufacturer = new javax.swing.JTextField();
        txtMedicineName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        comboMedicineType = new javax.swing.JComboBox<>();
        txtQuantity = new javax.swing.JTextField();
        txtBatchNumber = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        btnExport = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        btnSortPrice = new javax.swing.JButton();
        txtSearchSecond = new javax.swing.JTextField();
        btnMSearch = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jRadioManufacturer = new javax.swing.JRadioButton();
        jRadioMedicineName = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));

        jPanel2.setBackground(new java.awt.Color(255, 153, 102));

        jLabel1.setFont(new java.awt.Font("Stencil", 1, 48)); // NOI18N
        jLabel1.setText("Medicine Information System");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(51, 255, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SN", "Medicine ID", "Medicine Name", "Manufacturer", "Supplier", "Price", "Medicine Type", "Batch Number", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Medicine ID");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Medicine Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Manufacturer");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Supplier");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Price");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("Medicine Type");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel8.setText("Batch Number");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setText("Quantity");

        txtMedicineID.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        txtManufacturer.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        txtMedicineName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        txtPrice.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        comboMedicineType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "------Choose Medicine Type-------", "Tablet", "Syrup", "Syringe", "Tubes" }));

        txtQuantity.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });

        txtBatchNumber.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtBatchNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBatchNumberActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 204, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Add To Table");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel10.setForeground(java.awt.Color.red);

        jLabel11.setForeground(javax.swing.UIManager.getDefaults().getColor("nb.errorForeground"));

        jLabel12.setForeground(java.awt.Color.red);

        jLabel13.setForeground(java.awt.Color.red);

        jLabel14.setForeground(java.awt.Color.red);

        jLabel15.setForeground(java.awt.Color.red);

        jLabel16.setForeground(java.awt.Color.red);

        jLabel17.setForeground(java.awt.Color.red);

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Med Nepal");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("The Pharma Import");

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Dhruba Med Supplier");

        btnExport.setBackground(new java.awt.Color(0, 0, 255));
        btnExport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnExport.setForeground(new java.awt.Color(255, 255, 255));
        btnExport.setText("Export To TXT");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(153, 255, 0));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(53, 53, 53)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMedicineID, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMedicineName, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboMedicineType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBatchNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addGap(27, 27, 27)
                        .addComponent(jRadioButton2)
                        .addGap(36, 36, 36)
                        .addComponent(jRadioButton3)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(53, 53, 53)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                        .addGap(11, 11, 11))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(txtMedicineID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(txtMedicineName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jRadioButton2)
                                            .addComponent(jRadioButton1)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jRadioButton3)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(12, 12, 12)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(comboMedicineType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(txtBatchNumber))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(9, 9, 9))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtQuantity)))))
                .addGap(35, 35, 35))
        );

        jPanel4.setBackground(new java.awt.Color(204, 255, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnSortPrice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSortPrice.setText("Sort Price");
        btnSortPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortPriceActionPerformed(evt);
            }
        });

        btnMSearch.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnMSearch.setText("Search");
        btnMSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMSearchActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Search By:");

        buttonGroup2.add(jRadioManufacturer);
        jRadioManufacturer.setText("Manufacturer");

        buttonGroup2.add(jRadioMedicineName);
        jRadioMedicineName.setText("Medicine Name");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Search Information")));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addContainerGap(55, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioManufacturer)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioMedicineName)
                        .addGap(45, 45, 45))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtSearchSecond))
                        .addContainerGap())))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnMSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(156, 156, 156))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(228, 228, 228)
                .addComponent(btnSortPrice)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnSortPrice)
                .addGap(27, 27, 27)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jRadioManufacturer)
                    .addComponent(jRadioMedicineName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearchSecond, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnMSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem2.setText("Import ");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem3.setText("Exit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem1.setText("Open Help");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void txtBatchNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBatchNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBatchNumberActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String searchText = txtSearch.getText();
        
        
        if (searchText.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Enter the price to search","Error",JOptionPane.ERROR_MESSAGE);            
        }else{
            try{
                if(sorted = false){
                    //dilogues if the table is not sorted
                    JOptionPane.showMessageDialog(rootPane, "Please sort the table first","Error",JOptionPane.ERROR_MESSAGE);
                }else{
                    //creating table model
                    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                    
                    //array list to store table data
                    
                    ArrayList data = new ArrayList();
                    
                    for(int i=0; i < model.getRowCount(); i++){
                        for(int j=0; j< model.getColumnCount(); j++){
                            data.add(model.getValueAt(i, j));
                            
                        }
                    }
                    
                    
                    ArrayList<Integer> price = new ArrayList();
                    
                    for(int i =5; i<data.size(); i= i+9){
                        
                        if(data.get(i) instanceof String){
                        Integer priceExt = Integer.valueOf((String) data.get(i));
                        price.add(priceExt);
                        }if(data.get(i) instanceof Integer){
                        Integer priceExt = (Integer) data.get(i);
                        price.add(priceExt);
                        }
                    }
                    BinarySearch(price, searchText);
                }
                
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(rootPane, "Input only numeric values in the field of price", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//        String medicineType = (String) comboMedicineType.getSelectedItem();
//        System.out.println(medicineType);
        if(importCount == 0){
            JOptionPane.showMessageDialog(rootPane, "File Not imported. Import it form file menu","Information",JOptionPane.INFORMATION_MESSAGE);
        }else{
            
            clearErrorLvl();
            if(txtMedicineID.getText().isEmpty()){
                jLabel11.setText("Empty Field");
            }if(txtMedicineName.getText().isEmpty()){
                jLabel12.setText("Empty Field");
            }if(txtPrice.getText().isEmpty()){
                jLabel13.setText("Empty Field");
            }if(txtBatchNumber.getText().isEmpty()){
                jLabel14.setText("Empty Field"); 
            }if(txtManufacturer.getText().isEmpty()){
                jLabel10.setText("Empty Field");
            }if(txtQuantity.getText().isEmpty()){
                jLabel15.setText("Empty Field");
            }if(comboMedicineType.getSelectedIndex() == 0){
                jLabel17.setText("Please Choose the value");
            }else{
                try{
                String medicineID = txtMedicineID.getText();
                String medicineName = txtMedicineName.getText();
                String priceTemp = txtPrice.getText();
                int price = Integer.parseInt(priceTemp);
                //TODO: Price should not be negative
                String batchNumber = txtBatchNumber.getText();
                String manufacturer = txtManufacturer.getText();
                String quantityTemp = txtQuantity.getText();
                int quantity = Integer.parseInt(quantityTemp);
                String supplier ="";
                if (jRadioButton1.isSelected()) {
                supplier = "Med Nepal";
                } else if (jRadioButton2.isSelected()) {
                supplier = "The Pharma Import";
                } else if (jRadioButton3.isSelected()) {
                supplier = "Dhruba Med Supplier";
                } else {
                    JOptionPane.showMessageDialog(null, "Please Choose the supplier");
                }
                String medicineType = (String) comboMedicineType.getSelectedItem();
                int nextRow = 0;
                int rowCount = jTable1.getRowCount();
                emptyRowCheck = false;
                if(rowCount != 0){
                    do{
                        String s = (String) jTable1.getValueAt(nextRow, 1);
                        if(s != null && s.length() !=0){
                            nextRow++;
                        }else{
                            emptyRowCheck = true;
                        }
                    }while(nextRow < rowCount && !emptyRowCheck);
                }
                
                this.SNo = this.SNo +1;
                
                Object[] medicineInformation = {SNo,medicineID,medicineName,manufacturer,supplier,price,medicineType,batchNumber,quantity};
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.addRow(medicineInformation);
                JOptionPane.showMessageDialog(rootPane, "Added Successfully.", "", JOptionPane.INFORMATION_MESSAGE);
                
                this.sorted = false;
                //TODO: make error label empty or call the clear function
                clearErrorLvl();
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(rootPane, ex);
            }
            }
        }
       
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        String filePath = "src\\medicine\\information\\system\\data.txt"; //file path
        File file = new File(filePath);
        if (importCount > 0){
            JOptionPane.showMessageDialog(rootPane, "Already imported","Info", JOptionPane.INFORMATION_MESSAGE);
        }else{
            try{
                BufferedReader br = new BufferedReader(new FileReader(file));
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                
                Object[] tableLines = br.lines().toArray();
                
                for (Object tableLine : tableLines) {
                    String line = tableLine.toString().trim();
                    String[] rowData = line.split(",");
                    model.addRow(rowData);
                    String lastSNo = (String) model.getValueAt(jTable1.getModel().getRowCount() - 1,0);
                    this.SNo = Integer.parseInt(lastSNo);
                }
                importCount++;
                JOptionPane.showMessageDialog(rootPane, "File is imported sucessfully", "SUCESS", JOptionPane.INFORMATION_MESSAGE);
                
            }catch(HeadlessException | IOException | NumberFormatException ex){
                JOptionPane.showMessageDialog(rootPane, ex, "ERROR", JOptionPane.ERROR_MESSAGE);
                
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        // TODO add your handling code here:
        String filePath = "src\\medicine\\information\\system\\data.txt"; //file path
        File file = new File(filePath);
        
        try{
            TableModel model = jTable1.getModel();
            FileWriter export = new FileWriter(file);
            
            //Exporting table data to txt file
            for(int i=0; i<model.getRowCount();i++){
                for(int j=0; j < model.getColumnCount(); j++){
                    export.write(model.getValueAt(i,j).toString() + ",");
                }
                export.write(System.lineSeparator());
            }
            export.close();
            JOptionPane.showMessageDialog(rootPane, "The data was exported sucessfully", "Sucess", JOptionPane.INFORMATION_MESSAGE);
            
        } catch (IOException ex) {
            Logger.getLogger(MedicineInformation.class.getName()).log(Level.SEVERE, null, ex);
        } catch(NullPointerException ex){
            JOptionPane.showMessageDialog(rootPane, "File not found.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExportActionPerformed

    private void btnSortPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortPriceActionPerformed
        // TODO add your handling code here:
        try{
            if(sorted == true){
                JOptionPane.showMessageDialog(rootPane, "Already Sorted");
            }else{
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                
                //to store datas from table
                ArrayList data = new ArrayList();
                
                //geting all data to array list
                for (int i=0; i < model.getRowCount();i++){
                    for(int j=0; j < model.getColumnCount();j++){
                        data.add(model.getValueAt(i, j));
                        
                    }
                }
                System.out.println(data);
//                arraylist to seperate pric from data
                
                ArrayList<Integer> price = new ArrayList();
                for(int i=5; i < data.size(); i = i + 9){
                    if(data.get(i) instanceof String){
                        Integer priceExt = Integer.valueOf((String) data.get(i));
                        price.add(priceExt);
                    }if(data.get(i) instanceof Integer){
                        Integer priceExt = (Integer) data.get(i);
                        price.add(priceExt);
                    }
                }
                
                
                
                //array to store serial number
                ArrayList<String> serial = new ArrayList();
                for(int i=0; i<data.size(); i = i+9){
                    String serialNumber = String.valueOf(data.get(i));
                    serial.add(serialNumber);
                    System.out.println(serialNumber);
                }
                
                // seleciton sort selection sort
                for(int i=0; i < price.size()-1;i++){
                    int minPos = i;
                    for(int j = i+1; j < price.size(); j++){
                        if(price.get(j) < price.get(minPos)){
                            minPos = j;
                        }
                        int temp = price.get(minPos);
                        String tempNxt = serial.get(minPos);
                        price.set(minPos, price.get(i));
                        price.set(i,temp);
                        serial.set(minPos, serial.get(i));
                        serial.set(i, tempNxt);
                    }
                }
                
                
                Object[][] array = new Object[model.getRowCount()][model.getColumnCount()];
                for(int i=0; i< model.getRowCount();i++){
                    for(int j=0; j < model.getColumnCount();j++){
                        array[i][j] = model.getValueAt(i, j);
                    }
                }
                //setting table rows as 0
                model.setNumRows(0);
                
                
                
                //adding sorted rows to table
                
                for(int i=0; i < price.size(); i++){
                    for(int j = 0; j < serial.size(); j++){
                        int pricep = Integer.parseInt(array[j][5].toString());
                        int serials = Integer.parseInt(array[j][0].toString());
                        
                        if(price.get(i)==pricep){
                            if(serial.get(i).equals(Integer.toString(serials))){
                                model.addRow(new Object[]{array[j][0],array[j][1],array[j][2],array[j][3],array[j][4],array[j][5],array[j][6],array[j][7],array[j][8]});
                                break;
                            }
                        
                        }
                    }
                }
                this.sorted = true;
            }
        }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(rootPane, ex);
         }                          
        
    }//GEN-LAST:event_btnSortPriceActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void btnMSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMSearchActionPerformed
        // TODO add your handling code here:
        if(importCount == 0){
            JOptionPane.showMessageDialog(rootPane, "Import the file first from Menu and then only search","Information",JOptionPane.INFORMATION_MESSAGE);
        }else{
            String searchText = txtSearchSecond.getText().toUpperCase();    
            if(jRadioManufacturer.isSelected()){
                searchByManufacturer(searchText);
            }else if(jRadioMedicineName.isSelected()){
                searchByMedicineName(searchText);
            }else{
                JOptionPane.showMessageDialog(rootPane, "Please select search Type!");
            }
        }
            
    }//GEN-LAST:event_btnMSearchActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        clear();
        clearErrorLvl();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        if (Desktop.isDesktopSupported()) {
            try {
                //filepath and open
                File helpFile = new File("src\\medicine\\information\\system\\help.pdf");
                Desktop.getDesktop().open(helpFile);
            }
            //if file not found then display this
            catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "Please check the file.", "File not found.", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MedicineInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MedicineInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MedicineInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MedicineInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MedicineInformation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnMSearch;
    private javax.swing.JButton btnSortPrice;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> comboMedicineType;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioManufacturer;
    private javax.swing.JRadioButton jRadioMedicineName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtBatchNumber;
    private javax.swing.JTextField txtManufacturer;
    private javax.swing.JTextField txtMedicineID;
    private javax.swing.JTextField txtMedicineName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSearchSecond;
    // End of variables declaration//GEN-END:variables

    private void BinarySearch(ArrayList<Integer> price, String searchTextTemp) {
         //To change body of generated methods, choose Tools | Templates.
        boolean found = false;
        int searchText = Integer.parseInt(searchTextTemp);
        
        int minIndex = 0;
        int maxIndex = price.size()-1;
        int midIndex;
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        while(minIndex <= maxIndex){
            midIndex = (minIndex + maxIndex);
            int midElement = (Integer) price.get(midIndex);
            
            if(midElement == searchText){
                String medicineID = (String) model.getValueAt(midIndex, 1);
                String medicineName = (String) model.getValueAt(midIndex, 2);
                String manufacturer = (String) model.getValueAt(midIndex, 3);
                String supplier = (String) model.getValueAt(midIndex, 4);
                String prices = (String) model.getValueAt(midIndex, 5);
                String medicineType = (String) model.getValueAt(midIndex, 6);
                String batchNumber = (String) model.getValueAt(midIndex, 7);
                String quantity = (String) model.getValueAt(midIndex, 8);
                
                JOptionPane.showMessageDialog(rootPane, "Medicine ID:"+ medicineID +"\n"
                        +"Medicine Name:" + medicineName + "\n"
                        +"Manufacturer:" + manufacturer + "\n"
                        +"Supplier:" + supplier + "\n"
                        +"Price:" + prices + "\n"
                        +"Medicine Type:" + medicineType + "\n"
                        +"Batch Number:" + batchNumber + "\n"
                        +"Quantity:" + quantity + "\n",
                        "Medicine Information", JOptionPane.INFORMATION_MESSAGE);
                found = true;
                break;
            
            }else if(midElement > searchText){
                maxIndex = midIndex -1;
                
            }else if(midElement < searchText){
                minIndex = midIndex +1;
            }
            
        }
        if(found == false){
            JOptionPane.showMessageDialog(rootPane, "Data for the given price not found","Not Found",JOptionPane.ERROR_MESSAGE);
        }
        
    }

    private void searchByMedicineName(String searchText) {
        try{
    //            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();

                String medicineSearchText = searchText;
                String priceTemp = "";
                String quantityTemp = "";


                for (int i =0; i< jTable1.getRowCount(); i++){
                    String medicineName = jTable1.getValueAt(i, 2).toString().toUpperCase();
                    String price = jTable1.getValueAt(i, 5).toString();
                    String quantity = jTable1.getValueAt(i, 8).toString();
    //                System.out.println(priceTemp);
                    if(medicineName.equals(medicineSearchText)){
                       priceTemp = price;
                       quantityTemp = quantity;
                    }
                }
                if(!priceTemp.isEmpty()){
                      jLabel19.setText("There is "+ quantityTemp  +" "+medicineSearchText+" And Costs Rs."+priceTemp+"/Pcs.");
//                    JOptionPane.showMessageDialog(rootPane, "There is "+ quantityTemp  +" "+medicineSearchText+" And Costs Rs."+priceTemp+"/Pcs.","Search Result", JOptionPane.INFORMATION_MESSAGE);
                    txtSearchSecond.setText("");
                }else{
                    JOptionPane.showMessageDialog(rootPane, "Medicine Not Found! Please check the medicine name");
                }
            }catch(NullPointerException ex){
                JOptionPane.showMessageDialog(rootPane, "Search Field cannot be empty!");
            }catch (HeadlessException ex){
                JOptionPane.showMessageDialog(rootPane, "Error! Cannot complete the search");
            }
    
    }

    private void searchByManufacturer(String searchText) {
        try{
    //            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();

                String manufacturerSearchText = searchText;

                int itemCounter = 0;
                for (int i =0; i< jTable1.getRowCount(); i++){
                    String manufacturer = jTable1.getValueAt(i, 3).toString().toUpperCase();
                    System.out.println(manufacturer);
                    if(manufacturer.equals(manufacturerSearchText)){
                        itemCounter++;
                    }
                }
                if(itemCounter == 0){
                    JOptionPane.showMessageDialog(rootPane, "Manufacturer name: "+manufacturerSearchText+ ". Not Found","Search Result", JOptionPane.INFORMATION_MESSAGE);
                }else{
                      jLabel19.setText("There are "+ itemCounter +" medicines of "+manufacturerSearchText);
//                    JOptionPane.showMessageDialog(rootPane, "There are "+ itemCounter +" medicines of "+manufacturerSearchText,"Search Result", JOptionPane.INFORMATION_MESSAGE);
                    txtSearchSecond.setText("");
                }
            }catch(NullPointerException ex){
                JOptionPane.showMessageDialog(rootPane, "Search Field cannot be empty!");
            }catch (HeadlessException ex){
                JOptionPane.showMessageDialog(rootPane, "Error! Cannot complete the search");
            }
        
    
    }

    private void clear() {
        txtMedicineID.setText("");
        txtMedicineName.setText("");
        txtManufacturer.setText("");
        txtPrice.setText("");
        txtBatchNumber.setText("");
        txtQuantity.setText("");
        buttonGroup1.clearSelection();
        comboMedicineType.setSelectedIndex(0);
    }

    private void clearErrorLvl() {
        jLabel10.setText("");
        jLabel11.setText("");
        jLabel12.setText("");
        jLabel13.setText("");
        jLabel14.setText("");
        jLabel15.setText("");
        jLabel16.setText("");
        jLabel17.setText("");
        jLabel10.setText("");
    }
                                                                            
    
}
